[tox]
envlist = pep8,py27,py34
minversion = 1.6
skipsdist = True

[tempestenv]
sitepackages = False
setenv = VIRTUAL_ENV={envdir}
         OS_TEST_PATH=./tempest/test_discover
deps = setuptools
       -r{toxinidir}/requirements.txt

[testenv]
setenv = VIRTUAL_ENV={envdir}
         OS_TEST_PATH=./tempest/tests
passenv = OS_STDOUT_CAPTURE OS_STDERR_CAPTURE OS_TEST_TIMEOUT OS_TEST_LOCK_PATH OS_TEST_PATH TEMPEST_CONFIG TEMPEST_CONFIG_DIR http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
usedevelop = True
install_command = pip install -U {opts} {packages}
whitelist_externals = *
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
         find . -type f -name "*.pyc" -delete
         bash tools/pretty_tox.sh '{posargs}'

[testenv:genconfig]
commands = oslo-config-generator --config-file tools/config/config-generator.tempest.conf

[testenv:cover]
setenv = OS_TEST_PATH=./tempest/tests
commands = python setup.py testr --coverage --testr-arg='tempest\.tests {posargs}'

[testenv:all]
sitepackages = {[tempestenv]sitepackages}
# 'all' includes slow tests
setenv = {[tempestenv]setenv}
         OS_TEST_TIMEOUT=1200
deps = {[tempestenv]deps}
commands =
  find . -type f -name "*.pyc" -delete
  bash tools/pretty_tox.sh '{posargs}'

[testenv:full]
sitepackages = {[tempestenv]sitepackages}
setenv = {[tempestenv]setenv}
deps = {[tempestenv]deps}
# The regex below is used to select which tests to run and exclude the slow tag:
# See the testrepostiory bug: https://bugs.launchpad.net/testrepository/+bug/1208610
commands =
  find . -type f -name "*.pyc" -delete
  bash tools/pretty_tox.sh '(?!.*\[.*\bslow\b.*\])(^tempest\.(api|scenario|thirdparty)) {posargs}'

[testenv:full-serial]
sitepackages = {[tempestenv]sitepackages}
setenv = {[tempestenv]setenv}
deps = {[tempestenv]deps}
# The regex below is used to select which tests to run and exclude the slow tag:
# See the testrepostiory bug: https://bugs.launchpad.net/testrepository/+bug/1208610
commands =
  find . -type f -name "*.pyc" -delete
  bash tools/pretty_tox_serial.sh '(?!.*\[.*\bslow\b.*\])(^tempest\.(api|scenario|thirdparty)) {posargs}'

[testenv:large-ops]
sitepackages = {[tempestenv]sitepackages}
setenv = {[tempestenv]setenv}
deps = {[tempestenv]deps}
commands =
  find . -type f -name "*.pyc" -delete
  python setup.py testr --slowest --testr-args='tempest.scenario.test_large_ops {posargs}'

[testenv:smoke]
sitepackages = {[tempestenv]sitepackages}
setenv = {[tempestenv]setenv}
deps = {[tempestenv]deps}
commands =
  find . -type f -name "*.pyc" -delete
   bash tools/pretty_tox.sh '\[.*\bsmoke\b.*\] {posargs}'

[testenv:smoke-serial]
sitepackages = {[tempestenv]sitepackages}
setenv = {[tempestenv]setenv}
deps = {[tempestenv]deps}
# This is still serial because neutron doesn't work with parallel. See:
# https://bugs.launchpad.net/tempest/+bug/1216076 so the neutron smoke
# job would fail if we moved it to parallel.
commands =
  find . -type f -name "*.pyc" -delete
   bash tools/pretty_tox_serial.sh '\[.*\bsmoke\b.*\] {posargs}'

[testenv:stress]
sitepackages = {[tempestenv]sitepackages}
setenv = {[tempestenv]setenv}
deps = {[tempestenv]deps}
commands =
    run-tempest-stress {posargs}

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx {posargs}

[testenv:pep8]
commands =
   flake8 {posargs}
   {toxinidir}/tools/config/check_uptodate.sh
   python tools/check_uuid.py

[testenv:uuidgen]
commands =
   python tools/check_uuid.py --fix

[hacking]
local-check-factory = tempest.hacking.checks.factory
import_exceptions = tempest.services

[flake8]
# E125 is a won't fix until https://github.com/jcrocholl/pep8/issues/126 is resolved.  For further detail see https://review.openstack.org/#/c/36788/
# E123 skipped because it is ignored by default in the default pep8
# E129 skipped because it is too limiting when combined with other rules
# Skipped because of new hacking 0.9: H405
ignore = E125,E123,E129,H404,H405
show-source = True
exclude = .git,.venv,.tox,dist,doc,openstack,*egg
